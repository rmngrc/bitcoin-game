AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs22.x
    Architectures: [x86_64]
    Timeout: 10
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref GameStateTable
        # Use different endpoint for local development
        DYNAMODB_ENDPOINT: !If [IsLocal, "http://dynamodb-local:8000", ""]

Parameters:
  Stage:
    Type: String
    Default: local
    AllowedValues: [local, prod]
  CryptoCompareApiKey:
    Type: String

Conditions:
  IsLocal: !Equals [!Ref Stage, "local"]

Resources:
  ProjectHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods:
          - "*"
        AllowHeaders:
          - "*"
        AllowOrigins:
          - "https://d6tztee3rvnpz.cloudfront.net"
        AllowCredentials: true

  GameStateTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "game-state-${Stage}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH

  StartFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Start a new game session
      CodeUri: ./
      Handler: index.handler
      Environment:
        Variables:
          STAGE: !Ref Stage
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref ProjectHttpApi
            Path: /start
            Method: GET
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/functions/start/index.ts
        OutExtension:
          - ".js=.js"

  ScoreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Calculate the score after a guess
      CodeUri: ./
      Handler: index.handler
      Environment:
        Variables:
          STAGE: !Ref Stage
          DYNAMODB_TABLE: !Sub "game-state-${Stage}"
          DYNAMODB_ENDPOINT: !If [IsLocal, "http://dynamodb-local:8000", !Ref "AWS::NoValue"]
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref ProjectHttpApi
            Path: /score
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameStateTable
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/functions/score/index.ts
        OutExtension:
          - ".js=.js"

  PriceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Backend for frontend to get the price from a third party API
      CodeUri: ./
      Handler: index.handler
      Environment:
        Variables:
          STAGE: !Ref Stage
          CRYPTOCOMPARE_API_KEY: !Ref CryptoCompareApiKey
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref ProjectHttpApi
            Path: /price
            Method: GET
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/functions/price/index.ts
        OutExtension:
          - ".js=.js"
